name: Build and Validate ML Model

on:
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  build:
    name: Execute Model Training and Validation
    runs-on: self-hosted

    defaults:
      run:
        working-directory: Chatbot

    steps:
    - name: Initialize Workspace
      run: |
        echo "Cleaning runner workspace..."
        rm -rf "$GITHUB_WORKSPACE"/*
        echo "Workspace cleaned"

    - name: Retrieve Source Code
      uses: actions/checkout@v3

    - name: Set Up Environment and Train Model
      run: |
        python -m venv build_env
        source build_env/bin/activate
        pip install -r requirements_build.txt --break-system-packages
        python3 src/run_pipelines.py

    - name: Verify Model Artifact
      id: check_model_file
      run: |
        MODEL_PATH="models/saved_models/disease_classification_model.pkl"
        if [ -f "$MODEL_PATH" ]; then
          FILE_SIZE=$(stat -c%s "$MODEL_PATH")
          echo "file_exists=true" >> $GITHUB_OUTPUT
          echo "Model file exists at: $MODEL_PATH"
          echo "Model file size: $FILE_SIZE bytes"
        else
          echo "file_exists=false" >> $GITHUB_OUTPUT
          echo "Model file NOT found at: $MODEL_PATH"
          exit 1
        fi

    - name: Confirm Model Build Success
      if: steps.check_model_file.outputs.file_exists == 'true'
      run: echo "Model file exists! Build is successful."



    - name: Validate required files
      run: |
          REQUIRED_FILES=(
            web_app/app.py
            web_app/app_data/symptoms.json
            web_app/app_data/treatments.json
            web_app/app_data/condition_patterns.json
            web_app/app_data/symptom_batches.json
            web_app/templates/index.html
            models/saved_models/disease_classification_model.pkl
            requirements_deploy.txt
            deploy/gunicorn_config.py
            deploy/nginx_config
            deploy/start.sh
            deploy/stop.sh
            set.sh
          )
          echo "[INFO] Validating required files..."
          for FILE in "${REQUIRED_FILES[@]}"; do
            if [ ! -f "$FILE" ]; then
              echo "[ERROR] Missing required file: $FILE"
              exit 1
            else
              echo "[OK] Found: $FILE"
            fi
          done

    - name: Zip minimal app contents
      run: |
          mkdir -p dist/mlchatbot-app
          mkdir -p dist/mlchatbot-app/models/saved_models
          cp -rf web_app dist/mlchatbot-app/
          cp models/saved_models/disease_classification_model.pkl dist/mlchatbot-app/models/saved_models/
          cp requirements_deploy.txt dist/mlchatbot-app/
          cp -rf deploy dist/mlchatbot-app/
          cp set.sh dist/mlchatbot-app/
          cd dist && zip -r mlchatbot-app.zip mlchatbot-app
      

    - name: Validate zip contents
      run: |
        ls -lthra 
        pwd
        bash set.sh
