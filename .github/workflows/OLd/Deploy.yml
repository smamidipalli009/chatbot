name: Deploy ML Chatbot to EC2

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: self-hosted

    env:
      EC2_HOST: ec2-3-81-36-104.compute-1.amazonaws.com  # <- Replace with your actual EC2 public DNS/IP
      EC2_USER: ec2-user

    defaults:
      run:
        working-directory: medical_chatbot 

    steps:
      - name: Clean Workspace
        run: |
          echo "Cleaning runner workspace..."
          rm -rf "$GITHUB_WORKSPACE"/*
          echo "Workspace cleaned"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Validate required files
        run: |
          REQUIRED_FILES=(
            app/app.py
            app/app_data/symptoms.json
            app/app_data/treatments.json
            app/app_data/condition_patterns.json
            app/app_data/symptom_batches.json
            app/templates/index.html
            models/disease_classification_model.pkl
            requirements.txt
            main/run_chatbot.py
            setup.sh
          )
          echo "[INFO] Validating required files..."
          for FILE in "${REQUIRED_FILES[@]}"; do
            if [ ! -f "$FILE" ]; then
              echo "[ERROR] Missing required file: $FILE"
              exit 1
            else
              echo "[OK] Found: $FILE"
            fi
          done

      - name: Zip minimal app contents
        run: |
          mkdir -p dist/mlchatbot-app
          cp -r app dist/mlchatbot-app/
          cp -r models dist/mlchatbot-app/
          cp requirements.txt dist/mlchatbot-app/
          cp setup.sh dist/mlchatbot-app/
          cp main/run_chatbot.py dist/mlchatbot-app/
          cd dist && zip -r mlchatbot-app.zip mlchatbot-app

      - name: Upload ZIP to EC2 via SCP
        run: |
          scp -i ~/.ssh/mlchatbot_app_key.pem -o StrictHostKeyChecking=no \
            dist/mlchatbot-app.zip $EC2_USER@$EC2_HOST:~/

      - name: SSH and deploy
        run: |
          ssh -i ~/.ssh/mlchatbot_app_key.pem -o StrictHostKeyChecking=no \
            $EC2_USER@$EC2_HOST << 'EOF'
              rm -rf mlchatbot-app
              unzip -o mlchatbot-app.zip
              cd mlchatbot-app
              bash setup.sh
          EOF
